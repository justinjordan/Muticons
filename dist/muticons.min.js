/*! Muticons v0.1.5 - (c) Justin Jordan - www.opensource.org/licenses/MIT */
window.Muticons=new function(){this.init=function(){var t=document.getElementsByClassName("mut")
for(var e in t){var s=t[e]
if(!s.muticons_init&&(s.muticons_init=!0,"object"==typeof s)){s.states=[]
var a=void 0!==s.className?s.className.split(/\s+/):[]
for(var n in a){var i=a[n];-1!==i.indexOf("mut-")&&(s.states=i.replace("mut-","").split("--"))}s.state=0,s.className+=" "+s.states[0]
for(var o=window.getComputedStyle(s),n=0;n<3;n++)s.innerHTML+='<span class="mut-segment" style="background-color: '+o.color+';"></span>'
for(var r=2,n=0;n<r;n++){var u=o.backgroundColor
s.innerHTML+='<span class="mut-mask" style="background-color: '+u+';"></span>'}var c=s.attributes
for(var n in c){var l=c[n],m=l.value
switch(l.name){case"mut-bg":case"mut-background":s.style.backgroundColor=m
var r=s.getElementsByClassName("mut-mask")
for(var f in r)"object"==typeof r[f]&&(r[f].style.backgroundColor=m)
break
case"mut-fg":case"mut-foreground":case"mut-color":var d=s.getElementsByClassName("mut-segment")
for(var f in d)"object"==typeof d[f]&&(d[f].style.backgroundColor=m)
break
case"mut-duration":var g=s.getElementsByClassName("mut-segment")
for(var f in g)"object"==typeof g[f]&&(g[f].style.transitionDuration=m)
g=s.getElementsByClassName("mut-mask")
for(var f in g)"object"==typeof g[f]&&(g[f].style.transitionDuration=m)
break
case"mut-size":s.style.width=m,s.style.height=m}}var v=function(t){var e,s,a,n,i,o
if(e=this.states[this.state],t)switch(typeof t){case"number":s=t,s=s<this.states.length?s:0
break
case"string":var r=this.states.indexOf(t)
if(!(r>=0))return void console.error("Couldn't mutate to '"+t+"' because it's not a mutation defined in the element.")
s=r}else s=this.state+1,s=s<this.states.length?s:0
a=this.states[s],n=this.className.replace(new RegExp("(?:^|\\s)"+e+"(?:\\s|$)"),"   "+a+" "),n=n.trim().replace(/[\s]{2,}/g," "),this.className=n,this.state=s,i=this.getAttribute("mut-callback"),i="string"==typeof i?i.trim().replace(/^window\./,"").split("."):[],o=i.length>0?window:null
for(var u in i)void 0!==o[i[u]]&&(o=o[i[u]])
"function"==typeof o&&o(e)}
s.mutate=v,"function"==typeof jQuery&&jQuery.fn.extend({mutate:function(t){return this.each(function(){this.mutate(t)})}}),s.addEventListener("click",function(){this.mutate()})}}}},window.onload=window.Muticons.init
